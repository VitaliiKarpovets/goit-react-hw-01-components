{"version":3,"sources":["components/profile/Profile.styled.js","components/profile/Profile.js","components/friendlist/friendlistitem/FriendListItem.styled.js","components/friendlist/friendlistitem/FriendListItem.js","components/friendlist/FriendList.styled.js","components/friendlist/FriendList.js","components/statistics/Statistics.styled.js","components/statistics/Statistics.js","components/transactionhistory/TransactionHistory.styled.js","components/transactionhistory/TransactionHistory.js","App.js","index.js"],"names":["Container","styled","div","Description","Avatar","img","Name","p","Tag","Location","StatsList","ul","StatsItem","li","Label","span","Quantity","Profile","username","tag","location","avatar","stats","src","alt","followers","views","likes","Item","Status","props","isOnline","FriendListItem","name","List","FriendList","friends","map","friend","id","section","ContTitle","h2","StatList","Percentage","Statistics","title","stat","bgColor","r","Math","floor","random","g","b","toString","randomColor","style","backgroundColor","label","percentage","TableHistory","table","TableHead","thead","HeadRow","tr","Head","th","TableBody","tbody","BodyRow","Cell","td","TransactionHistory","items","item","type","amount","currency","user","App","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baf5fc63.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n    width: 300px;\r\n    height 200px;\r\n    text-align: center;\r\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n    border-radius: 0px 0px 4px 4px;\r\n    margin-top: 20px;\r\n`\r\n\r\nexport const Description = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n    padding-bottom: 30px;\r\n`\r\n\r\n\r\nexport const Avatar = styled.img`\r\n    display: block;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    margin: 0;\r\n\r\n`\r\n\r\nexport const Name = styled.p`\r\n    font-weight: 500;\r\n    font-size: 30px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n`\r\nexport const Tag = styled.p`\r\n    font-size: 20px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n    color: grey;\r\n    margin: 0;\r\n`\r\nexport const Location = styled.p`\r\n    font-size: 20px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n    color: grey;\r\n    margin: 0;\r\n    margin-top: 20px;\r\n`\r\n\r\nexport const StatsList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    background-color: #DCDCDC;\r\n`\r\n\r\n\r\nexport const StatsItem = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100px;\r\n    height: 75px;\r\n    border-top: 0.5px solid #696969;\r\n    :not(:last-child) { border-right: 0.5px solid #696969 };\r\n`\r\nexport const Label = styled.span`\r\n    color: #696969;\r\n    font-size: 12px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nexport const Quantity = styled.span`\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;    \r\n`","import PropTypes from 'prop-types';\r\nimport {Container, Description, Avatar, Name, Tag, Location, StatsList, StatsItem, Label, Quantity} from './Profile.styled'\r\n\r\nfunction Profile({ username, tag, location, avatar, stats }) {\r\n    return (\r\n        <Container>\r\n            <Description>\r\n                <Avatar\r\n                    src={avatar}\r\n                    alt=\"User avatar\"\r\n                />\r\n                <Name>{username}</Name>\r\n                <Tag>@{tag}</Tag>\r\n                <Location>{location}</Location>\r\n            </Description>\r\n\r\n            <StatsList>\r\n                <StatsItem>\r\n                    <Label>Followers</Label>\r\n                    <Quantity>{stats.followers}</Quantity>\r\n                </StatsItem>\r\n                <StatsItem>\r\n                    <Label>Views</Label>\r\n                    <Quantity>{stats.views}</Quantity>\r\n                </StatsItem>\r\n                <StatsItem>\r\n                    <Label>Likes</Label>\r\n                    <Quantity>{stats.likes}</Quantity>\r\n                </StatsItem>\r\n            </StatsList>\r\n        </Container>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n}\r\n\r\nexport default Profile;","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 300px;\r\n    height: 75px;\r\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n    border-radius: 0px 0px 4px 4px;\r\n    :not(:last-child) { margin-bottom: 15px };\r\n`\r\nconst bgColor = props => {\r\n    switch (props.isOnline) {\r\n        case true:\r\n            return 'green';\r\n        case false:\r\n            return 'red';\r\n        default:\r\n            return 'tomato';\r\n    }\r\n}\r\n\r\nexport const Status = styled.span`\r\n    display: block;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background-color: ${bgColor};\r\n    margin-left: 20px;\r\n    margin-right: 20px;\r\n`\r\nexport const Avatar = styled.img`\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 10px;\r\n    padding-right: 20px;\r\n`\r\n\r\nexport const Name = styled.p`\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n`\r\n","import PropTypes from 'prop-types';\r\nimport {Item, Status, Avatar, Name} from './FriendListItem.styled'\r\n\r\nfunction FriendListItem({avatar, name, isOnline}) {\r\n    return (\r\n        <Item>\r\n        <Status isOnline={isOnline}></Status>\r\n            <Avatar src={avatar} alt=\"User avatar\"/>\r\n            <Name>{name}</Name>\r\n        </Item>)   \r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  id: PropTypes.number,\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\n\r\nexport default FriendListItem;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-top: 20px;\r\n`\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './friendlistitem/FriendListItem';\r\nimport friends from '../../dataJSON/friends.json';\r\nimport {List} from './FriendList.styled'\r\n\r\n\r\nfunction FriendList() {\r\n\r\n    return (\r\n        <List>\r\n            {friends.map((friend) => (\r\n                <FriendListItem\r\n                    key={friend.id}\r\n                    avatar={friend.avatar}\r\n                    name={friend.name}\r\n                    isOnline={friend.isOnline}\r\n                />)\r\n            )} \r\n        </List>\r\n    )\r\n\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.section`\r\n    width: 300px;\r\n    height 200px;\r\n    text-align: center;\r\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n    border-radius: 0px 0px 4px 4px;\r\n    margin-top: 20px;\r\n    background-color: white;\r\n`\r\nexport const ContTitle = styled.h2`\r\n    text-transform: uppercase;\r\n    color: #696969;\r\n`\r\n\r\nexport const StatList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    // background-color: #DCDCDC;\r\n`\r\nexport default function randomColor() {\r\n    let r = Math.floor(Math.random() * (256));\r\n    let g = Math.floor(Math.random() * (256));\r\n    let b = Math.floor(Math.random() * (256));\r\n    const color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n    return color;\r\n}\r\n\r\nexport const Item = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-top: 0.5px solid #696969;\r\n    :not(:last-child) { border-right: 0.5px solid #696969 };\r\n`\r\n\r\nexport const Label = styled.span`\r\n    color: #fff;\r\n    font-size: 12px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nexport const Percentage = styled.span`\r\n    color: #fff;\r\n    font-size: 20px;\r\n    line-height: 1.187;\r\n    letter-spacing: 0.03em;\r\n    margin-bottom: 10px;\r\n`\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport {Container, ContTitle, StatList, Item, Label, Percentage} from './Statistics.styled'\r\nimport randomColor from './Statistics.styled';\r\n\r\nfunction Statistics({ title, stats }) {\r\n    return (\r\n        <Container>\r\n            {title && <ContTitle>{title}</ContTitle>}\r\n\r\n            <StatList>\r\n                {stats.map(stat => {\r\n                    const bgColor = randomColor();\r\n                    return (\r\n                        <Item key={stat.id} style={{ backgroundColor: bgColor,}}>\r\n                            <Label>{stat.label}</Label>\r\n                            <Percentage>{stat.percentage}%</Percentage>\r\n                        </Item>\r\n                    )\r\n                })}\r\n            </StatList>\r\n        </Container>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n}\r\n\r\nexport default Statistics;","import styled from \"@emotion/styled\";\r\n\r\nexport const TableHistory = styled.table`\r\n    width: 600px;\r\n    padding-top: 20px;\r\n`\r\n\r\nexport const TableHead = styled.thead`\r\n    background-color: #00BFFF;\r\n    height: 50px;\r\n`\r\nexport const HeadRow = styled.tr`\r\n    color: #fff\r\n`\r\n\r\nexport const Head = styled.th`\r\n    color: #fff\r\n`\r\n\r\nexport const TableBody = styled.tbody`\r\n    text-align: center;\r\n`\r\n\r\nexport const BodyRow = styled.tr`\r\n    :nth-of-type(even) {\r\n        background-color: #FFFFFF;\r\n    };\r\n    :nth-of-type(odd) {\r\n        background-color: #00FFFF;\r\n    }\r\n`\r\n\r\nexport const Cell = styled.td`\r\n    color: #808080;\r\n`","import PropTypes from 'prop-types';\r\nimport { TableHistory, TableHead, HeadRow, Head, TableBody, BodyRow, Cell } from './TransactionHistory.styled';\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return (\r\n        <TableHistory>\r\n            <TableHead>\r\n                <HeadRow>\r\n                <Head>Type</Head>\r\n                <Head>Amount</Head>\r\n                <Head>Currency</Head>\r\n                </HeadRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n                {items.map(item => (\r\n                <BodyRow key={item.id}>\r\n                <Cell>{item.type}</Cell>\r\n                <Cell>{item.amount}</Cell>\r\n                <Cell>{item.currency}</Cell>\r\n                </BodyRow>))}\r\n            </TableBody>\r\n        </TableHistory>\r\n    )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape(\r\n            {\r\n                id: PropTypes.string.isRequired,\r\n                type: PropTypes.string.isRequired,\r\n                amount: PropTypes.string.isRequired,\r\n                currency: PropTypes.string.isRequired,\r\n            }\r\n        )\r\n    )\r\n}\r\n\r\nexport default TransactionHistory;","import { Fragment } from 'react';\nimport Profile from './components/profile';\nimport user from './dataJSON/user.json';\nimport FriendList from './components/friendlist/FriendList';\nimport friends from './dataJSON/friends.json';\nimport Statistics from './components/statistics/Statistics';\nimport data from './dataJSON/data.json';\nimport TransactionHistory from './components/transactionhistory/TransactionHistory';\nimport transactions from './dataJSON/transactions.json'\n\nconst { username, tag, location, avatar, stats } = user;\n\n\nfunction App() {\n  return (\n    <Fragment>\n      <Profile\n        username={username}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <FriendList friends={friends} />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <TransactionHistory items={transactions} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}